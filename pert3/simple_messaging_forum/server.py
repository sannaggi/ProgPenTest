import socket
from threading import Thread
import pickle

PORT = 8000
cons = [] # open connections for broadcast


def main():
    print("Server active")
    
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM) # family=AF_INET: ipv4 family, type=SOCK_STREAM: enables sequenced, reliable, two-way, connection-based byte streams over TCP
    s.bind(("", PORT))
    s.listen(10) # It specifies the number of unaccepted connections that the system will allow before refusing new connections.

    while True:
        con, addr = s.accept()
        cons.append(con)

        print("Client connected:", addr)

        t = Thread(target=process, args=(con,))
        t.start()
    
    print("Server ended")

def process(con):
    while True:
        data = con.recv(4096)
        if not data:
            break

        print(data.decode())

        # broadcast
        other_connections = list(filter(lambda connection: connection != con, cons))

        for connection in other_connections:
            connection.send(data)
    
    con.close()
    print("Client disconnected")

if __name__ == "__main__":
    main()