import socket
from threading import Thread
import pickle
from Data import Message
import sys

PORT = 8000

def main():
    print("Server active")
    
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM) # family=AF_INET: ipv4 family, type=SOCK_STREAM: enables sequenced, reliable, two-way, connection-based byte streams over TCP
    s.bind(("", PORT))
    s.listen(10) # It specifies the number of unaccepted connections that the system will allow before refusing new connections.

    con, _ = s.accept()

    t = Thread(target=recv_thread, args=(con,))
    t2 = Thread(target=send_thread, args=(con,))
    t.start()
    t2.start()
    t.join()
    t2.join()
    
    con.close()
    print("Server ended")

def recv_thread(con):
    while True:
        data = con.recv(4096)
        message = pickle.loads(data)

        if not data:
            break

        message.print_details()
    
    con.close()
    print("Client disconnected")

def send_thread(c):
    while True:
        title = input("Input title: ")
        content = input("Input content: ")
        new_message = Message(title, content)
        buffer = pickle.dumps(new_message)

        c.send(buffer)

if __name__ == "__main__":
    main()