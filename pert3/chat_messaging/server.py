import socket
from threading import Thread
import pickle

PORT = 8000
cons = [] # open connections
addrs = [] # open addresses

def main():
    print("Server active")
    
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM) # family=AF_INET: ipv4 family, type=SOCK_STREAM: enables sequenced, reliable, two-way, connection-based byte streams over TCP
    s.bind(("", PORT))
    s.listen(10) # It specifies the number of unaccepted connections that the system will allow before refusing new connections.

    while True:
        con, addr = s.accept()
        cons.append(con)
        addrs.append(addr)

        print("Client connected:", addr)
        print(f"Total: {len(cons)} connected")

        t = Thread(target=process, args=(con,))
        t.start()
    
    print("Server ended")

def process(con):
    while True:
        try:
            data = con.recv(4096)
        except:
            break

        if not data:
            break

        message = pickle.loads(data)

        target_con = get_target_connection(message.target_host, message.target_port)
        buffer = pickle.dumps(message)
        target_con.send(buffer)
    
    con.close()
    print("Client disconnected")

def get_target_connection(target_host, target_port):
    for i in range(len(cons)):
        if addrs[i][0] == target_host and addrs[i][1] == target_port:
            return cons[i]
    
    return None
        

if __name__ == "__main__":
    main()

# cd pert3/chat_messaging/